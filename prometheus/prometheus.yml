# Global configuration settings applied to all jobs unless overridden
global:
  scrape_interval: 15s      # Default interval for scraping metrics from targets (15 seconds)
  scrape_timeout: 10s       # Timeout for each scrape request (10 seconds)
  evaluation_interval: 15s  # Interval for evaluating alerting rules (15 seconds)

# Alerting configuration for sending alerts to Alertmanager instances
alerting:
  alertmanagers:
    - static_configs:
      - targets: []         # List of Alertmanager instances to send alerts to (empty, so no alerts will be sent)
      scheme: http          # Protocol scheme for Alertmanager communication (http or https)
      timeout: 10s          # Timeout for Alertmanager requests (10 seconds)
      api_version: v2       # API version to use for Alertmanager (v2)

# Scrape configurations define how Prometheus collects metrics from targets
scrape_configs:
  # Job to scrape metrics from Prometheus itself
  - job_name: prometheus      # Unique name for this scrape job
    honor_timestamps: true    # Use timestamps provided by the target (if available)
    scrape_interval: 15s      # Interval for scraping this job (overrides global if different)
    scrape_timeout: 10s       # Timeout for scraping this job
    metrics_path: /metrics    # Path to the metrics endpoint on the target
    scheme: http              # Protocol scheme to use for scraping (http or https)
    static_configs:
      - targets:
        - localhost:9090      # Target to scrape (Prometheus's own metrics endpoint)

# Example job for scraping metrics from a node_exporter instance (commented out)
#  - job_name: docker        # Custom job name (e.g., 'docker' for a Docker host)
#    static_configs:
#      - targets: ['10.1.1.1:9100']  # IP and port of the node_exporter instance (change to your server's IP)

# Example job for scraping metrics from a single windows_exporter instance (commented out)
#  - job_name: hyperv        # Custom job name (e.g., 'hyperv' for a Hyper-V host)
#    static_configs:
#      - targets: ['10.1.1.2:9182']  # IP and port of the windows_exporter instance (change to your server's IP)

# Example job for scraping metrics from multiple windows_exporter instances (commented out)
#  - job_name: hyperv        # Custom job name (e.g., 'hyperv' for multiple Hyper-V hosts)
#    static_configs:
#      - targets:
#        - '10.1.1.3:9182'     # First windows_exporter instance (change to your server's IP)
#        - '10.1.1.4:9182'     # Second windows_exporter instance (change to your server's IP)
#        - '10.1.1.5:9182'     # Third windows_exporter instance (change to your server's IP)
#        - '10.1.1.6:9182'     # Fourth windows_exporter instance (change to your server's IP)